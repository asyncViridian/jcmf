2019-06-13
TEMP NOTES TO SELF:
    - NEED TO RE-RUN ALL OF THE NEWPARAMS SCRIPTS, SINCE THE SETTINGS FILE WAS BROKEN

Graphs:
    - Scatterplot RNA-posterior against pair-posterior
        - Done!
    - Be able to generate graphs with statistics across ALL regions at the same time
        - Thoughts on this: maybe serialize the graph data so it's usable later?
    - Overlap: simple coordinate check, check against different species
Cross-scoring inputs (Scoring one input based on a different motif to check equality)
    - distinguishing between multiple motifs in the same region?
    - distinguishing between motifis on different strands?
Track Hub
    - Clean up score file linking & parse the score file
        - Done! Just need to add it to the track-processing scripts
Implementation
    - Make sure the block-length-limits option is working properly
        - Possible bug: Single-block "merge" + sequence is an insert is not working
        - Other than that, it looks mostly OK? I think?
        - Currently running!!!
Stretch goals
    - Filter out overlapping results (duplicate results)
    - Evaluate whether the pscore threshold used is meaningful or not
        - Can simulate BS output with randomized/shuffled blocks, then pick a meaningful threshold
Writeup
Misc
    - Keep the Process Notes file updated...

===============================================================================
2019-06-06
Graphs:
    - Fix the bug in the "merged block size stats" graph.
        - Done!
    - Graph the species used for all the motifs (see bigscan paper for how they did it)
        - Done! This is sorted in order from least to most motifs per species.
        - Sort of small font. Don't want to bother prettyifying it, augh
    - Check the bigscan paper for other interesting graphs too...?
    - Additional: Add additional versions of each graph for both pre- and post- scorefilter
        - Done!
Track Hub:
    - Clean up the score file linking?
    - Parse it to look nicer
        - How can I make it look nicer?
Implementation:
    - Add "overall block limits" option to block-based merging-block
        - sort of as a midway between block- and base- based merging
        - Done in theory, have yet to test & debug.
Longer-term?:
    - filtering out overlapping blocks
    - evaluating the pscore thresholds
        - Simulate BS output with randomized/shuffled blocks
Work on the writeup:
    - motivation: previous cmfinder/1-block motif searching
    - method: merge, cmfinder, pscore
    - results: trackhub, details
    - discussion/impact: discussion of novelty, comparison with previous runs??, future steps
    - references: need to collect those.z

Other To-Do:
    - Update the Process Notes file lol.

===============================================================================
2019-05-30
Use pscore>50 threshold...
    - Done! This has been changed in trackGenerator
finish rerunning cmfinder with old arguments
    - and add those to the track hub so all comparable
    - Done!
    - 5-block run with old arguments has been added to the track hub, and is viewable
finish rerunning cmfinder with old arguments on 10-block merge
    - Done!
    - I have also added it to the track hub.
add score files to the track hub (so can view the actual motif found)
    - In-progress! I have added full support for the "old arguments" data and am currently uploading src for the "new arguments" output.
    - Add only the score files that pass the filter?
        - This saves a lot of space on my own laptop, but isn't super urgent as a general thing.
        - I need to do this now. The vergil server is running out of disk quota...
        - Done! The track-generating script automatically does this now.
    - May want this to look nicer. However right now we have ALL of the raw information associated with scoring uploaded (yay!)
upload graphs to FTP server?
    - Figure out if we want graphs per-region or for the overall data.
    - Probably want some overall graphs for things like block length, scores...
    - Done! Currently is sorted by source run and not actually tied to the output for each block.
    - Still need to come up with nicer graphs gaaaaaah. Sort through which graphs I am producing and then produce more helpful graphs :P
    - There a bug in the "merged block size stats" graph. Fix this.....

Longer-term?
    - filtering out overlapping blocks
    - evaluating the pscore thresholds
        - Simulate BS output with randomized/shuffled blocks

===============================================================================
2019-05-23
Add detail to each block per line in the trackhub (beddetail?)
    - What detail do we want?
    - (Not now: Possibly visualize a potential folding of the DNA in the region)
    - Score, sequence, alignment file.
Implement alternate method of merging. Find a way to show and compare those results
    - Merge block difference: use length threshold instead of block # threshold
    - Length threshold: have a minimum block length and probably a fairly generous maximum block length. Perhaps shift based on percentage of block, not a constant?
    - Generally you can't have a block that is too long for cmfinder to return good results, but I still want to get statistics on how much longer it takes to run a block of n length vs 2n length (or something like that)
Re-deploy scores after pscore from the latest set of arguments finishes running...
    - Partition is almost done....
Re-run the entire pipeline using previous rna scan parameters
    - This has been started! The output goes into the "emuBigscan" directories.
Work on the writeup:
    - motivation: previous cmfinder/1-block motif searching
    - method: merge, cmfinder, pscore
    - results: trackhub, details
    - discussion/impact: discussion of novelty, comparison with previous runs??, future steps
    - references: need to collect those.
Verification: compare? -> previous rna scan arguments. Ask Larry about this!
Collect statistics
    - Average block size
        - Done! Added to the reference track generator code
    - Average motif size
    - Graph the amount that alignment gaps comprise each motif found.
        - i.e. the amount of gap used in each motif body
    - Graph the species in each motif data, somehow??
Rework the track generation to NOT use a decimal for greyscale value
    - this is what was causing the bigBed issue
    - Done!
Improve BED track generation scoring:
    - Find a uniform score scaling that works on all four regions? possibly?    
    - Add a max(the found score score, 1000) in case something exceeds the score
Upload track data to webserver so it can be accessed more easily
    - Add URLs for each hit found linked to extra information
    - http://students.washington.edu/jyzhou15/trackHub/hub.txt
I added a reference track generator so that we can see reference alignment blocks!
    - Why is quality score not displaying in the bigBed format????
        - FIXED!!!
        - This seems to be a setting in the track db.
        - Note that the "spectrum" setting in the track db file needs to be set to on.
        - Furthermore, you NEED to have the filetype set to bigbed [number] of some sort.

https://academic.oup.com/bioinformatics/article/26/17/2204/199001

===============================================================================
2019-05-09 & 2019-05-16
Collect statistics
    - Score histogram: distribution on pair-posterior, rna-posterior
        - Wasn't there another score produced by cmfinder directly???
        - this is now output by trackgenerator as two histograms.
            - It might be nice to log scale them or something. TODO
    - I already have the block length vs gap percentage graph
        - Perhaps make that into a better format???
    - Graph number of blocks overlapped, perhaps. "Block boundaries" gap
        - Done. Not sure how informational this is...
    - Graph the amount that alignment gaps comprise each motif found.
        - i.e. the amount of gap used in each motif body
    - Graph the species in each motif data, somehow??
Merge block difference: use length threshold instead of block # threshold
    - Length threshold: have a minimum block length and probably a fairly generous maximum block length. Perhaps shift based on percentage of block, not a constant?
    - Generally you can't have a block that is too long for cmfinder to return good results, but I still want to get statistics on how much longer it takes to run a block of n length vs 2n length (or something like that)
Separate single-block motifs into a separate track
    - For chr12: using pairScore filters out all of the single-block hits, but rnaScore seems to have much higher scores overall and so contains several of these results.
Find a uniform score scaling that works on all four regions
    - Would it help to have some kind of log scale??? idk man
Add a max(the found score score, 1000) in case something exceeds the score
Upload track data to webserver so it can be accessed more easily
    - Add URLs for each hit found linked to extra information
    - Track hubs is how the previous CMfinder study displays their data. Look into setting that up, instead of solely generating a single BED/BEDdetail file.
    - I have some notes about track hubs in the Process Notes file...
    - Set this up manually for now. I want to automate this generation perhaps later but it doesn't quite seem worth the effort yet...
    - Need to compile into BEDdetail format somehow.
Track hub generation
    - To convert into bigBed from bed format:
        - http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/
        - download some utilities from here
    - I've set up the basic structure of the hub. Still missing individual track element URLs for extra detail.
    - http://students.washington.edu/jyzhou15/trackHub/hub.txt

===============================================================================
2019-05-02
possibly change merge style:
    - minimum merge block length threshold and add blocks until it hits that
    - shift on percentage overlap
genome browser file formats -> visualize?
    - like the track format for alignment blocks.
    - gff, bed similar formats.
        - BED seems like it will work better: GFF requires reading frame data which is sort of a waste. BED seems to be more concise and adaptable, which is great for my purposes.
    - see how overlapping regions shows up - could visualize with overlapping results and non-overlapping
    - http://genome.ucsc.edu/cgi-bin/hgCustom?hgsid=725072751_CDa4000ZfjAIuAaUC6vmqIGOqYhD
could re-process long regions that look funny with more strict cmfinder parameters?
could set up a web interface
    - doesn't have to be fancy. just anything more convenient than filesystem navigation, because file systems aren't designed for looking at all this stuff.
    - wow I'm starting to appreciate the value of quick data visualization
find link to browser interface for paper results and compare those
(not now) rna structure visualization
    - maybe later.

===============================================================================
2019-04-25
Requirement and length enforcement
    - By default: require human to be included
    - Possibly also preference mouse DNA to be included? Unsure.
    - Implemented! Also lowered minimum default length to 10
?        - I see a lot of consecutive tiny merges.
        - Perhaps bunch those merges up into other result blocks???
Collect stats
    - From the mergeblocks:
        - Gap% or N% statistics tracking
            - Partially implemented.
            - There are complications from including the rightmost interval area in the resulting block, but that portion isn't counted as part of the block sequence length.
            - I have fixed this (as well as discovered another bug and fixed that): now only the gap-spaces in between each merged block are included, and NOT the gaps to the leftmost or rightmost block. Also I no longer duplicate gap alignment blocks.
        - % of each block from each source block
    - From the scripts or in post-processing:
        - Runtime stats
        - CMFinder covariance model has a score / correlate with rna score and pair score?
        - "motifs over which blocks" / merge effectiveness
        - motif overlaps score / motifs showing up in multiple blocks that are the same thing?
Run on data in background
    - all of the different regions of interest.
    - be sure to version these results very very clearly...
    
===============================================================================
2019-04-18
- Haven't run CMFinder on merged blocks before, it's all been from single alignment blocks in sequence
    - check literature for other merged blocks work
        - https://bmcgenomics.biomedcentral.com/articles/10.1186/1471-2164-15-53#Sec1
            - about alignment blocks
    - Running 1000 5-merged-blocks with otherwise default settings takes about 16 hours
    - Running scoring on all of the outputs from that process takes 30+ hours?
- Try running CMFinder on merged blocks!
    - screen? disown?
        - Disown works, have verified that a script can run for at least 2 days while disowned on attu.
        - If it looks like it isn't showing up in top, that's because I'm on the wrong attu
            - work on attu6 from now on.........
    - check the output log!!!
- Possible other parameters to track:
    - Maximum total block length?
        - i.e. if a merged result is 5000 then it is probably too long!
    - Minimum total block length? 
        - i.e. if a merged result is 20 then it is probably no(t much) better than just using a single block really
    - For total block length: perhaps track based on human sequence length.
        - What do I do if human isn't actually in the merged block?
        - Should I require that human sequence is in the merge block?
- Possible other features to add:
    - Output the bounds of each source alignment block into the FASTA file
        - This is useful for filtering out CMFinder hits that are maybe only within one block anyway and are not particularly interesting for mergeblock purposes
        - Add it to the header line?
            - Figure out a good way to format the headerline that is conducive to parsing CMFinder output.
        - DONE.
    - Check if removing gap characters (-) from the FASTA output changes the CMFinder output?
        - this can be a simple diff...
        - Maybe this is why the "node identifier not found" type messages are appearing???
            - I have implemented a switch for this, and it is getting rid of the "node identifier" messages. (Finally!)
- Possible other statistics that are helpful
    - Gap% or N% statistics tracking
    - % of each block from each source block

Debug notes (from the cmfinder output):
    WHEN RUNNING ON MERGED BLOCKS (default parameters):
            - Figured this out. This is because there were blank newlines in some files, possibly sequences of 0 length being included in the FASTA. This screws up the expectation of vienna initialize_fold.
        (It is only outputting results ranging from blocks 80-85, and then this type of output appears in the logs:)
        parallel running candf
        ran childPid=14375
        Running: /homes/iws/jyzhou15/498r/cmfinder-0.4.1.15/bin/candf  -t times/split/m100_chr12_62602752-62622213_1000.fasta -c 60 -o split/m100_chr12_62602752-62622213_1000.fasta.cand.h1 -M 150 -m 20 -s 1 -S 1 split/m100_chr12_62602752-62622213_1000.fasta
        Running: /homes/iws/jyzhou15/498r/cmfinder-0.4.1.15/bin/candf  -t times/split/m100_chr12_62602752-62622213_1000.fasta -c 60 -o split/m100_chr12_62602752-62622213_1000.fasta.cand.h2 -M 150 -m 20 -s 2 -S 2 split/m100_chr12_62602752-62622213_1000.fasta

        initialize_fold: argument must be greater 0
                command failed: 256  at /homes/iws/jyzhou15/498r/cmfinder-0.4.1.15/bin/cmfinder04.pl line 1082.
        child exited with status=256 at /homes/iws/jyzhou15/498r/cmfinder-0.4.1.15/bin/cmfinder04.pl line 312.
        ran childPid=14376
        about to collect childPid=14375
    WHEN RUNNING ON APESRODENTS FILTERED BLOCKS:
        Contains .temp and .temp.dnd files in the output, is this expected / an error / what?
            - "guide tree"?
            - looks like it's expected. don't touch this for now

===============================================================================
2019-04-11
- Continue merging blocks!
    - additional rules to keep track of:
        - If the strand switches, then it is not mergeable
        - If a gap is too long (exceeds some threshold), then it is not mergeable
    - Include all mergeable species possible per merging-block
        - If number of result species is too small (maybe use human + macaque + at least 4 other species as a minimum) then probably discard the block
- Handling the output?
    - probably don't want to write a java program to call mergeblocks + cmfinder + summary, since each component individually is helpful
    - Write a java program (or whatever other language is helpful) for summary itself
    - Then call each component in sequence with a bash script
        - note to self: please just get better at bash, you're going to need it for debianmed as well omg

Note: "Syntax error: node identifier ........ not found" sources from these lines in vienna
    lib-vienna-1.7.1/treedist.c:   fprintf(stderr,"Syntax error: node identifier \"%s\" not found "
    lib-vienna-1.7.1/stringdist.c:    fprintf(stderr,"Syntax error: node identifier \"%s\" not found "

Command to merge the blocks given some input maf (see also the usage output...)
    BlockMerger -sd data -s multiz100way_chr12_62602752-62622213.maf -od output -o m100_chr12_62602752-62622213

WHAT TO DO NEXT:
- Automatic evaluation of results and visualizing them cleanly would be neat
    - Write that summary script...
- Test different values of merge parameters, CMFinder parameters
- Compare the results of nonmerged results vs merged results
    - (There should probably be some results that are now longer?)
    - How to evaluate the result quality other than looking over each hit manually?
- Debug any weirdness in CMFinder you happen to notice

===============================================================================
2019-04-04
- Thesis vs paper:
    - thesis can be slightly less focused on a single topic, instead have more room to explain what the process is and the reasoning behind doing certain things
    - thesis could be refined into a paper
- Continue merging blocks :)
    - Don't prematurely optimize!
    - Base-based merging:
        - TODO
    - Block-based merging:
        - contain up to N alignment blocks per merge
        - contain a specific set of species S per merge
            - focus on hominids?
            - although if there is another species outside of S that is still mergeable, include it
                - maybe make this toggleable: TODO
    - Block merge criteria!
        - Two blocks are "mergeable" for a single species sequence if:
            - The bases ascend reasonably (not overlapping in coordinates, not wrongly ordered)
            - Iff neither block is in a scaffold: They are not within two separate chromosomes (if either is in a scaffold, disregard this rule)
        - Two blocks are "mergeable" for a set of species S if the blocks are mergable for each species in S
        - If two adjacent blocks are un-mergeable for N,S and the current set of alignment blocks being attempted to merge:
            - Treat the first block as the end of the whole MAF, then the second one as the beginning of the next "MAF file".
    - Block merge intervals:
        - can slide down at every N bases, selecting the M contiguous bases that qualify under the above criteria
        - or can slide down containing N alignment blocks, etc the same
            - although this could produce much more variable results since each alignment blocks has varying lengths
    - Memory?
        - can write to disk as we go / "paging" the parts that are relevant and saving the irrelevant parts to disk
        - in the case of reading MAF: maybe read each successive block when we need more bases?
        - discard the old blocks that are not used anymore perhaps

===============================================================================

- Continue merging blocks
    - went over some of the MAF spec
    - probably can ignore some of the more complicated alignment details, since those are probably less helpful
    - "scaffold": not fully constructed sequence, so there are a lot more chunks than there should be

===============================================================================

- MERGE THE BLOCKS
    - try different multi-block merges (i.e. N in a row, sliding down, exclude noncontinuous species sequences)
- save more interesting results
- can use CMscore in infernal to try to match found results on a sequence
    - can check out weird results (i.e. those found in primates but not humans) by searching?
- check out rnaphylo at leisure

===============================================================================

- List of questions about RNAPhylo(pscore), Jukes-Cantor and model family?
    - uhh...
- Notes about parameters for cmfinder04.pl
    - looks like -likeold is making it so that no motifs are found, interesting
        - maybe a debug bug?
    - looks like -combine makes some weird .gap, .dnd, and .temp. files
        - they're being scored? what are these
    - try varying span inputs especially.
        - I made the range really wide, in particular.
        - Try making it lean small or lean large. (doesn't seem like these should give different results)
    - also lower the % motifs in sequence, esp since 100-way means that we probably dont have very related species?
    - check the FASTA input!!!! the current species included are a bit weird
        - have a new fasta input that uses the species closest to human only
            - humans+monkeys? + rodents
- Notes about merging blocks
    - goddamn it galaxy being annoying
    - I'll just script this out in Java. TODO this!
        - maybe pass in the score and merge based on the sequuences used in scoring???
- Some interesting motifs found?
    - saved in interesting/
    - block 847 keeps showing up as one of the top scoring motif locations, but cmfinder reports that human dna does not contain that motif ? hmm

===============================================================================

- Pscore
    - randomize sequences (with same G-C content, etc) to find the typical distribution of scores
    - what is "RNA posterior" vs "pair posterior"?
        - "Pair posterior" possibly the more useful one. Read the paper lol.
- check motifs
    - particularly interesting area: block 68
- cmfinder command
    - cmfinder04.pl -likeold -combine -amaa "$file"

===============================================================================

RNAPhylo/Pscore
    - Look up Jukes-Cantor phylogenetic tree / DNA sequence evolution model
        - matrix model of change frequency
    - as well as slightly more complex models
    - Zizhen's Yao's paper, describe how Pscore works
        - RNAPhylo
    - Basically: given some reliable phylogenetic tree and parameters of DNA evolution (rates of change?), find probabilities of some set of sequences being covariance vs regular evolution vs unrelated
    - Keep an eye out for the code that calculates those parameters it uses
    - Previous studies that used Pscore set thresholds for significance at around 50?
        - chr12 seems to have RNA posterior maxed around 30 (even the pair posterior ~ 30 for that one)
Again, try combining adjacent blocks
    - need to pick an interval for that, try using MAF stitch in Galaxy
Again, try varying CMFinder parameters
    - this may be ready to test!
    - first find a way to grep-sort the scores though lol

===============================================================================

Have some interesting sequences (scored - pick some good scores)
try to combine adjacent blocks and run again
    - Galaxy Stitch MAF looks promising. Yet to try this
Also vary parameters as usual
    - Figure out a way to automate this / check results, perhaps
pscore: find a phylogenetic tree, also might need a score matrix sort of thing
    - Got a phylo tree! multiz100way.newick in the data folder
    - RNAPhylo -t (phylo tree) (Stockholm aligned)

===============================================================================

- cmfinder04.pl should suffice
        cmfinder04.pl -skipClustalW -minCandScoreInFinal 10 -combine -fragmentary -commaSepEmFlags x--filter-non-frag,--max-degen-per-hit,2,--max-degen-flanking-nucs,7,--degen-keep,--amaa SEQUENCE
    - add BLAST anchor functionality back in if it turns out it's much slower without it later ...
- Genome browser tables are cool now!
- Block merging: see if Galaxy does that work
    - https://usegalaxy.org/u/dan/p/maf

===============================================================================

- Try creating fasta from the output in examples folder (remove gaps)
    - fasta made (test.fasta)
    - cmfinder.pl fails (versioning bad?)
    - cmfinder04.pl works (but may have differences in output, it seems optimized for truncated sequences???)
        cmfinder04.pl -skipClustalW -minCandScoreInFinal 10 -combine -fragmentary -commaSepEmFlags x--filter-non-frag,--max-degen-per-hit,2,--max-degen-flanking-nucs,7,--degen-keep,--amaa SEQUENCE
- Try querying the genome browser tables - MAF file, get just the sequency part of the MAF files? read docs of the format
- Try getting the block merging to work... Well see if there's working tools for it first

===============================================================================
12/13
Run cmfinder on standard block set and try to reproduce study results?
Vary cmfinder parameters, learn what those do. (Can decrease speed in exchange for more sensitivity, since we are studying smaller regions)
Figure out how to merge adjacent blocks (python code from previous students)
Try running on attu?

===============================================================================
2018-11-28
CRS = conserved rna structure
Send prof interesting coordinates (in particular, places where captureseq found things but not listed in cmfinder)
Also coordinates where there's other interesting things (i.e. the spike in regulatory traits)
Locations with lots of repeats tend to be less reliable (hard to sequence, or maybe reinsert rna)
DNAase: places where chromatin has opened up, related to transcriptional activity
H3K27Ac: Histone modification, related to transcriptional activity

here are a few of my colleague's candidates.  Coordinates are with respect to "GRCh38" (a genome build version number; I think this is the same as the data base in denmark that I sent earlier, but we should be careful).
    - Denmark uses hg38 : same build version number

So a suggested starting point is to look each of these up in that data base and see what if anything we found there.  You also should look at them in the genome browser (http://genome.ucsc.edu/) to see what else is known about these regions, e.g. nearby genes.

ID               Chr   start     end       strand
ENSG00000261716  chr1  149844498 149849024 -
    - Exactly named RP11-196G18.22
    - Contains subsequence RP11-196G18.24
    - Doesn't align with rhesus at all??
        Your query:
        hg38/chr1:149844498-149849024     [UCSC Genome browser]
        Your query matches 0 CRSs. Click on the CRS identifiers to get their annotation.
    http://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&position=chr1:149844498-149849024&hubUrl=https://rth.dk/resources/rnannotator/crs/vert/v2/data/cmfscreenhub/getme.txt
ENSG00000245146  chr5  140072857 140108630 -
    - Exactly named LINC01024
    - Overlaps at the very end with PURA
        Your query:
        hg38/chr5:140072857-140108630     [UCSC Genome browser]
        Your query matches 12 CRSs. Click on the CRS identifiers to get their annotation.
            CRS         Chr     Start       End         FDR     Strand
            M2215197    chr5    140073561   140073623   11.72   - (reverse)
            M0920623    chr5    140074003   140074044   14.68   + (forward)
            M0920624    chr5    140074022   140074054   14.68   +
            M0920627    chr5    140081934   140081967   9.92    +
            M0920625    chr5    140081960   140082015   7.52    +
            M0920636    chr5    140082161   140082195   16.64   +
            M0920632    chr5    140082167   140082253   16.64   +
            M2215201    chr5    140087159   140087254   14.68   -
            M2215203    chr5    140087224   140087254   14.35   -
            M0920639    chr5    140104528   140104596   11.72   +
            M0920641    chr5    140107116   140107182   24.43   +
            M0920654    chr5    140107657   140107716   35.44   +
    http://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&lastVirtModeType=default&lastVirtModeExtraState=&virtModeType=default&virtMode=0&nonVirtPosition=&position=chr5%3A140072857-140108630&hgsid=699931569_0un4dVAubI1GCqXq6A9rHZJGLrKr
ENSG00000257354  chr12  62602752  62622213 +
    - No exact name
    - Beginning section within LINC01465
        - lots of conservation here, also high H3K27Ac ("often found near regulatory elements")
    - Beginning half overlaps RP11-631N16.2
    - Overlaps fairly well with AC048341.1 - half intron, half exon
        Your query:
        hg38/chr12:62602752-62622213     [UCSC Genome browser]
        Your query matches 6 CRSs. Click on the CRS identifiers to get their annotation.
            CRS         Chr     Start       End         FDR     Strand
            M1585556    chr12   62603599    62603639    35.44   -
            M0301489    chr12   62604118    62604149    24.43   +
            M1585559    chr12   62612220    62612286    9.2     -
            M0301493    chr12   62618045    62618093    9.2     +
            M0301492    chr12   62618046    62618105    10.85   +
            M0301495    chr12   62621154    62621219    16.64   +
    http://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&lastVirtModeType=default&lastVirtModeExtraState=&virtModeType=default&virtMode=0&nonVirtPosition=&position=chr12%3A62602752-62622213&hgsid=699931827_IUZZNskofxtd6MSNkDIwNmx3jqFU

ENSG00000261338  chr2  218255319 218257366 +
    - Exactly named RP11-378A13.1
    - Exactly named AC021016.2 - all exon
        Your query:
        hg38/chr2:218255319-218257366     [UCSC Genome browser]
        Your query matches 0 CRSs. Click on the CRS identifiers to get their annotation.
    http://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&lastVirtModeType=default&lastVirtModeExtraState=&virtModeType=default&virtMode=0&nonVirtPosition=&position=chr2%3A218255319-218257366&hgsid=699931923_MnWU2n942ldNyqNw2Np7Y4gssrwS

===============================================================================
Coordinates of increased expression areas. Compare with vertebrate scan results. Maybe merge blocks from vertebrate scan and rerun cmfinder?

===============================================================================
Background reading notes:
ncRNA: RNA that doesn't make protein
    - generally 1.2% is protein, but 90% is transcribed
        - (how do we know if it makes protein?)
    - made from other transcripts, so less features
    - fold (i.e. in hairpins) in order to minimize energy (maybe other things optimized?)
    - structure is not particularly better than random sequence folding
        - except in microRNA
        - so we can use conservation instead, to figure out which parts are important
Limitations of "ncRNA genes"
    - Secondary structure is possibly only partially conserved
"pseudoknots"/structure = hairpins
    - minimizes free energy
Types of programs:
    - Alignment
        - Take advantage of a pre-existing sequence alignment
        - Such as QRNA, AlifoldZ, RNAZ
    - Fold-first
        - Structural inserts, emphasis on structure first
        - Use a sliding window?
        - Such as pfold, EvoFold
    - Joint
        - Sankoff's Algorithm
False discovery rate: the estimates are pretty high
Other terms of interest:
    - Fusion transcripts
    - varying sizes? (???)
    - RNA interference
    - microRNA
        - really short ncRNAs
    - riboswitches
        - a specific class of ncRNAs with similar function
    - wobble pairs
        - some RNA base pairs can switch out so it's not only A-U G-C but also G-U sometimes